package mert.kadakal.yazlmblog;

import android.app.AlertDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Build;
import android.os.Bundle;
import android.text.InputType;
import android.text.SpannableString;
import android.text.method.ScrollingMovementMethod;
import android.text.style.StyleSpan;
import android.text.style.AbsoluteSizeSpan;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.material.navigation.NavigationView;
import com.google.android.material.textfield.TextInputEditText;

import androidx.appcompat.app.AppCompatActivity;
import androidx.drawerlayout.widget.DrawerLayout;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import mert.kadakal.yazlmblog.api.ApiClient;
import mert.kadakal.yazlmblog.api.ApiService;
import mert.kadakal.yazlmblog.api.Sikayet;
import mert.kadakal.yazlmblog.api.Yorum;
import mert.kadakal.yazlmblog.ui.blog.BlogEkran;
import mert.kadakal.yazlmblog.ui.blog.HomeFragment;
import mert.kadakal.yazlmblog.ui.hesap.NotificationsFragment;
import mert.kadakal.yazlmblog.ui.populer.DashboardFragment;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class MainActivity extends AppCompatActivity {

    private DrawerLayout drawerLayout;
    private NavigationView navigationView;
    SharedPreferences sharedPreferences;
    ApiService apiService = ApiClient.getClient().create(ApiService.class);
    MenuItem navIsim;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        drawerLayout = findViewById(R.id.drawer_layout);
        navigationView = findViewById(R.id.nav_view);
        sharedPreferences = getSharedPreferences("MyPrefs", Context.MODE_PRIVATE);
        navIsim = navigationView.getMenu().findItem(R.id.nav_isim);
        SpannableString spanTitle = new SpannableString("YazÄ±lÄ±mBlog");
        spanTitle.setSpan(new StyleSpan(Typeface.BOLD), 0, spanTitle.length(), 0);
        spanTitle.setSpan(new AbsoluteSizeSpan(24, true), 0, spanTitle.length(), 0);
        navIsim.setTitle(spanTitle);

        // MenÃ¼ tÄ±klamalarÄ±nÄ± yakala
        navigationView.setNavigationItemSelectedListener(item -> {
            int id = item.getItemId();
            if (id == R.id.nav_home) {
                getSupportFragmentManager().beginTransaction()
                        .replace(R.id.fragment_container, new HomeFragment())
                        .commit();
            } else if (id == R.id.nav_popular) {
                getSupportFragmentManager().beginTransaction()
                        .replace(R.id.fragment_container, new DashboardFragment())
                        .commit();
            } else if (id == R.id.nav_account) {
                getSupportFragmentManager().beginTransaction()
                        .replace(R.id.fragment_container, new NotificationsFragment())
                        .commit();
            } else if (id == R.id.nav_kvkk) {
                showKvkkDialog();
            } else if (id == R.id.nav_kahve) {
                showKahveDialog();
            } else if (id == R.id.nav_fikironeri) {
                if (sharedPreferences.getInt("userid", -1) == -1) {
                    Toast.makeText(this, "Bir hesaba giriÅŸ yapmalÄ±sÄ±nÄ±z", Toast.LENGTH_SHORT).show();
                    return true;
                }
                showFikirDialog();
            }

            drawerLayout.closeDrawers();
            return true;
        });

        // ðŸ”¹ Ä°lk aÃ§Ä±lÄ±ÅŸta HomeFragment gÃ¶ster
        if (savedInstanceState == null) {
            getSupportFragmentManager().beginTransaction()
                    .replace(R.id.fragment_container, new HomeFragment())
                    .commit();
            navigationView.setCheckedItem(R.id.nav_home); // menÃ¼de seÃ§ili gÃ¶rÃ¼nmesi iÃ§in
        }
    }

    // KVKK AlertDialog gÃ¶sterme fonksiyonu
    private void showKvkkDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("KiÅŸisel Verilerin KorunmasÄ± HakkÄ±nda");

        String kvkkText = "6698 sayÄ±lÄ± KiÅŸisel Verilerin KorunmasÄ± Kanunu (KVKK) uyarÄ±nca, YazÄ±lÄ±mBlog uygulamasÄ± olarak kullanÄ±cÄ±larÄ±mÄ±zÄ±n kiÅŸisel verilerini aÅŸaÄŸÄ±da aÃ§Ä±klanan Ã§erÃ§evede iÅŸlemekteyiz.\n\n" +
                "1. Veri Sorumlusu\n" +
                "YazÄ±lÄ±mBlog\n" +
                "E-posta: mert.kadakal1629@gmail.com\n" +
                "Adres: Hacettepe Ãœniversitesi, ANKARA/Ã‡ankaya\n\n" +
                "2. Ä°ÅŸlenen KiÅŸisel Veriler\n" +
                "- KullanÄ±cÄ± adÄ±\n" +
                "- KullanÄ±cÄ± profil fotoÄŸrafÄ±\n" +
                "- E-posta adresi\n" +
                "- Telefon numarasÄ±\n\n" +
                "3. KiÅŸisel Verilerin Ä°ÅŸlenme AmaÃ§larÄ±\n" +
                "- Uygulama hizmetlerinin sunulabilmesi ve yÃ¶netilmesi\n" +
                "- KullanÄ±cÄ± hesaplarÄ±nÄ±n oluÅŸturulmasÄ± ve yÃ¶netimi\n" +
                "- KullanÄ±cÄ± deneyiminin iyileÅŸtirilmesi\n" +
                "- Yasal yÃ¼kÃ¼mlÃ¼lÃ¼klerin yerine getirilmesi\n\n" +
                "4. KiÅŸisel Verilerin AktarÄ±lmasÄ±\n" +
                "Toplanan kiÅŸisel verileriniz, yalnÄ±zca yasal zorunluluklar veya hizmetin gereklilikleri Ã§erÃ§evesinde iÅŸ ortaklarÄ±mÄ±zla paylaÅŸÄ±labilir.\n\n" +
                "5. KiÅŸisel Verilerin Saklanma SÃ¼resi\n" +
                "Verileriniz, iÅŸleme amaÃ§larÄ±nÄ±n ortadan kalkmasÄ±na veya ilgili mevzuatta Ã¶ngÃ¶rÃ¼len sÃ¼relerin dolmasÄ±na kadar saklanacaktÄ±r.\n\n" +
                "6. KullanÄ±cÄ± HaklarÄ±\n" +
                "KVKKâ€™nÄ±n 11. maddesi uyarÄ±nca kullanÄ±cÄ±lar;\n" +
                "- KiÅŸisel verilerinin iÅŸlenip iÅŸlenmediÄŸini Ã¶ÄŸrenme,\n" +
                "- Ä°ÅŸlenmiÅŸse buna iliÅŸkin bilgi talep etme,\n" +
                "- Ä°ÅŸlenme amacÄ±nÄ± Ã¶ÄŸrenme,\n" +
                "- Eksik veya yanlÄ±ÅŸ iÅŸlenmiÅŸse dÃ¼zeltilmesini isteme,\n" +
                "- Silinmesini veya anonimleÅŸtirilmesini isteme,\n" +
                "- Ä°ÅŸlemeye itiraz etme\n" +
                "haklarÄ±na sahiptir.\n\n" +
                "7. BaÅŸvuru YÃ¶ntemi\n" +
                "HaklarÄ±nÄ±zÄ± kullanmak iÃ§in taleplerinizi mert.kadakal1629@gmail.com Ã¼zerinden iletebilirsiniz.";

        ScrollView scrollView = new ScrollView(this);
        TextView textView = new TextView(this);
        textView.setText(kvkkText);
        textView.setPadding(40, 30, 40, 30);
        scrollView.addView(textView);

        builder.setView(scrollView);

        builder.setPositiveButton("Tamam", (dialog, which) -> dialog.dismiss());

        AlertDialog dialog = builder.create();
        dialog.show();
    }

    private void showKahveDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Bana Kahve Ismarla :)");

        String kvkkText = "Ãœniversite Ã¶ÄŸrencisi olarak geliÅŸtirdiÄŸim bu uygulamayÄ± beÄŸendiysen bana bi' kahve Ä±smarlamak ister misin? Åžimdiden Ã§ok teÅŸekkÃ¼r ediyorum :)\n\n" +
                "TR240006701000000023402080";

        ScrollView scrollView = new ScrollView(this);
        TextView textView = new TextView(this);
        textView.setText(kvkkText);
        textView.setPadding(40, 30, 40, 30);
        scrollView.addView(textView);

        builder.setView(scrollView);

        builder.setPositiveButton("Tamam", (dialog, which) -> dialog.dismiss());

        // Kopyala butonu metni panoya kopyalÄ±yor
        builder.setNeutralButton("Kopyala", (dialog, which) -> {
            ClipboardManager clipboard = (ClipboardManager) this.getSystemService(Context.CLIPBOARD_SERVICE);
            ClipData clip = ClipData.newPlainText("Kopyala", "TR240006701000000023402080");
            clipboard.setPrimaryClip(clip);
            Toast.makeText(this, "Metin panoya kopyalandÄ±", Toast.LENGTH_SHORT).show();
        });

        AlertDialog dialog = builder.create();
        dialog.show();
    }

    private void showFikirDialog() {
        EditText input = new EditText(this);
        input.setHint("Fikir ve Ã¶nerilerinizi giriniz");
        input.setBackgroundResource(android.R.drawable.edit_text);
        input.setPadding(30, 20, 30, 40);

        LinearLayout container = new LinearLayout(this);
        container.setOrientation(LinearLayout.VERTICAL);
        container.setPadding(40,50,40,40);

        container.addView(input);

        // AlertDialog oluÅŸtur
        new AlertDialog.Builder(this)
                .setTitle("Fikir ve Ã¶nerilerinizi Ã¶nemsiyoruz")
                .setView(container)
                .setPositiveButton("GÃ¶nder", (dialog1, whichButton) -> {
                    String aciklama = input.getText().toString().trim();

                    if (aciklama.isEmpty()) {
                        Toast.makeText(this, "BoÅŸ bÄ±rakÄ±lamaz", Toast.LENGTH_SHORT).show();
                        return;
                    }

                    Yorum yeniYorum = new Yorum();
                    yeniYorum.setEklenen_blog(-1);
                    yeniYorum.setEkleyen_id(sharedPreferences.getInt("userid", -1));
                    yeniYorum.setIcerik(aciklama);
                    yeniYorum.setTarih("00-00-0000");
                    yeniYorum.setPuan(0);

                    Call<Yorum> callYorum = apiService.addYorum(yeniYorum);
                    callYorum.enqueue(new Callback<Yorum>() {
                        @Override
                        public void onResponse(Call<Yorum> call, Response<Yorum> response) {
                            if (response.isSuccessful()) {
                                new AlertDialog.Builder(MainActivity.this)
                                        .setTitle("âœ… Geri bildiriminizi aldÄ±k âœ…")
                                        .setPositiveButton("Tamam", null)
                                        .show();
                            } else {
                                try {
                                    String errorJson = response.errorBody().string(); // errorBody string olarak al
                                    Log.e("API", "Hata: " + response.code() + " - " + errorJson);
                                } catch (Exception e) {
                                    Log.e("API", "Hata body okunamadÄ±", e);
                                }
                            }
                        }
                        @Override
                        public void onFailure(Call<Yorum> call, Throwable t) {
                            Log.e("API", "Ä°stek baÅŸarÄ±sÄ±z: " + t.getMessage());
                        }
                    });
                })
                .setNegativeButton("Ä°ptal", (dialog1, whichButton) -> dialog1.dismiss())
                .show();
    }
}
